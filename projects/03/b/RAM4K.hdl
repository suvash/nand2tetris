// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=lda, b=ldb, c=ldc, d=ldd, e=lde, f=ldf, g=ldg, h=ldh);
    RAM512(load=lda, address=address[0..8], in=in, out=oa);
    RAM512(load=ldb, address=address[0..8], in=in, out=ob);
    RAM512(load=ldc, address=address[0..8], in=in, out=oc);
    RAM512(load=ldd, address=address[0..8], in=in, out=od);
    RAM512(load=lde, address=address[0..8], in=in, out=oe);
    RAM512(load=ldf, address=address[0..8], in=in, out=of);
    RAM512(load=ldg, address=address[0..8], in=in, out=og);
    RAM512(load=ldh, address=address[0..8], in=in, out=oh);
    Mux8Way16(sel=address[9..11], a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, out=out);
}
